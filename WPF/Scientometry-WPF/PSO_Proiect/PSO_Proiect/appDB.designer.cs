#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PSO_Proiect
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="APP_Scientometrie")]
	public partial class appDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPublicatii(Publicatii instance);
    partial void UpdatePublicatii(Publicatii instance);
    partial void DeletePublicatii(Publicatii instance);
    partial void InsertArticole(Articole instance);
    partial void UpdateArticole(Articole instance);
    partial void DeleteArticole(Articole instance);
    partial void InsertAutor_Afiliere(Autor_Afiliere instance);
    partial void UpdateAutor_Afiliere(Autor_Afiliere instance);
    partial void DeleteAutor_Afiliere(Autor_Afiliere instance);
    partial void InsertAutori(Autori instance);
    partial void UpdateAutori(Autori instance);
    partial void DeleteAutori(Autori instance);
    partial void InsertAutori_Articole(Autori_Articole instance);
    partial void UpdateAutori_Articole(Autori_Articole instance);
    partial void DeleteAutori_Articole(Autori_Articole instance);
    partial void InsertCitari(Citari instance);
    partial void UpdateCitari(Citari instance);
    partial void DeleteCitari(Citari instance);
    partial void InsertDetalii(Detalii instance);
    partial void UpdateDetalii(Detalii instance);
    partial void DeleteDetalii(Detalii instance);
    partial void InsertDOI_Citari(DOI_Citari instance);
    partial void UpdateDOI_Citari(DOI_Citari instance);
    partial void DeleteDOI_Citari(DOI_Citari instance);
    partial void InsertModPrezentare(ModPrezentare instance);
    partial void UpdateModPrezentare(ModPrezentare instance);
    partial void DeleteModPrezentare(ModPrezentare instance);
    partial void InsertAfilieri(Afilieri instance);
    partial void UpdateAfilieri(Afilieri instance);
    partial void DeleteAfilieri(Afilieri instance);
    partial void InsertTip_Publicatie(Tip_Publicatie instance);
    partial void UpdateTip_Publicatie(Tip_Publicatie instance);
    partial void DeleteTip_Publicatie(Tip_Publicatie instance);
    #endregion
		
		public appDBDataContext() : 
				base(global::PSO_Proiect.Properties.Settings.Default.APP_ScientometrieConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public appDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public appDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public appDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public appDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Publicatii> Publicatiis
		{
			get
			{
				return this.GetTable<Publicatii>();
			}
		}
		
		public System.Data.Linq.Table<Articole> Articoles
		{
			get
			{
				return this.GetTable<Articole>();
			}
		}
		
		public System.Data.Linq.Table<Autor_Afiliere> Autor_Afilieres
		{
			get
			{
				return this.GetTable<Autor_Afiliere>();
			}
		}
		
		public System.Data.Linq.Table<Autori> Autoris
		{
			get
			{
				return this.GetTable<Autori>();
			}
		}
		
		public System.Data.Linq.Table<Autori_Articole> Autori_Articoles
		{
			get
			{
				return this.GetTable<Autori_Articole>();
			}
		}
		
		public System.Data.Linq.Table<Citari> Citaris
		{
			get
			{
				return this.GetTable<Citari>();
			}
		}
		
		public System.Data.Linq.Table<Detalii> Detaliis
		{
			get
			{
				return this.GetTable<Detalii>();
			}
		}
		
		public System.Data.Linq.Table<DOI_Citari> DOI_Citaris
		{
			get
			{
				return this.GetTable<DOI_Citari>();
			}
		}
		
		public System.Data.Linq.Table<ModPrezentare> ModPrezentares
		{
			get
			{
				return this.GetTable<ModPrezentare>();
			}
		}
		
		public System.Data.Linq.Table<Afilieri> Afilieris
		{
			get
			{
				return this.GetTable<Afilieri>();
			}
		}
		
		public System.Data.Linq.Table<Tip_Publicatie> Tip_Publicaties
		{
			get
			{
				return this.GetTable<Tip_Publicatie>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Publicatii")]
	public partial class Publicatii : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPublicatie;
		
		private string _Nume;
		
		private int _TipPublicatie;
		
		private string _Editor;
		
		private EntitySet<Articole> _Articoles;
		
		private EntityRef<Tip_Publicatie> _Tip_Publicatie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPublicatieChanging(int value);
    partial void OnIDPublicatieChanged();
    partial void OnNumeChanging(string value);
    partial void OnNumeChanged();
    partial void OnTipPublicatieChanging(int value);
    partial void OnTipPublicatieChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    #endregion
		
		public Publicatii()
		{
			this._Articoles = new EntitySet<Articole>(new Action<Articole>(this.attach_Articoles), new Action<Articole>(this.detach_Articoles));
			this._Tip_Publicatie = default(EntityRef<Tip_Publicatie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPublicatie", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDPublicatie
		{
			get
			{
				return this._IDPublicatie;
			}
			set
			{
				if ((this._IDPublicatie != value))
				{
					this.OnIDPublicatieChanging(value);
					this.SendPropertyChanging();
					this._IDPublicatie = value;
					this.SendPropertyChanged("IDPublicatie");
					this.OnIDPublicatieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nume", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Nume
		{
			get
			{
				return this._Nume;
			}
			set
			{
				if ((this._Nume != value))
				{
					this.OnNumeChanging(value);
					this.SendPropertyChanging();
					this._Nume = value;
					this.SendPropertyChanged("Nume");
					this.OnNumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipPublicatie", DbType="Int NOT NULL")]
		public int TipPublicatie
		{
			get
			{
				return this._TipPublicatie;
			}
			set
			{
				if ((this._TipPublicatie != value))
				{
					if (this._Tip_Publicatie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipPublicatieChanging(value);
					this.SendPropertyChanging();
					this._TipPublicatie = value;
					this.SendPropertyChanged("TipPublicatie");
					this.OnTipPublicatieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Publicatii_Articole", Storage="_Articoles", ThisKey="IDPublicatie", OtherKey="IDPublicatie")]
		public EntitySet<Articole> Articoles
		{
			get
			{
				return this._Articoles;
			}
			set
			{
				this._Articoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tip_Publicatie_Publicatii", Storage="_Tip_Publicatie", ThisKey="TipPublicatie", OtherKey="IDTipPublicatie", IsForeignKey=true)]
		public Tip_Publicatie Tip_Publicatie
		{
			get
			{
				return this._Tip_Publicatie.Entity;
			}
			set
			{
				Tip_Publicatie previousValue = this._Tip_Publicatie.Entity;
				if (((previousValue != value) 
							|| (this._Tip_Publicatie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tip_Publicatie.Entity = null;
						previousValue.Publicatiis.Remove(this);
					}
					this._Tip_Publicatie.Entity = value;
					if ((value != null))
					{
						value.Publicatiis.Add(this);
						this._TipPublicatie = value.IDTipPublicatie;
					}
					else
					{
						this._TipPublicatie = default(int);
					}
					this.SendPropertyChanged("Tip_Publicatie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Articoles(Articole entity)
		{
			this.SendPropertyChanging();
			entity.Publicatii = this;
		}
		
		private void detach_Articoles(Articole entity)
		{
			this.SendPropertyChanging();
			entity.Publicatii = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articole")]
	public partial class Articole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDArticol;
		
		private string _Nume;
		
		private System.Nullable<double> _FactorImpact;
		
		private int _IDPublicatie;
		
		private int _IDMod;
		
		private string _WOS;
		
		private string _DOI;
		
		private int _IDDetalii;
		
		private string _Jurnal;
		
		private EntitySet<Autori_Articole> _Autori_Articoles;
		
		private EntitySet<Citari> _Citaris;
		
		private EntityRef<Publicatii> _Publicatii;
		
		private EntityRef<Detalii> _Detalii;
		
		private EntityRef<ModPrezentare> _ModPrezentare;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDArticolChanging(int value);
    partial void OnIDArticolChanged();
    partial void OnNumeChanging(string value);
    partial void OnNumeChanged();
    partial void OnFactorImpactChanging(System.Nullable<double> value);
    partial void OnFactorImpactChanged();
    partial void OnIDPublicatieChanging(int value);
    partial void OnIDPublicatieChanged();
    partial void OnIDModChanging(int value);
    partial void OnIDModChanged();
    partial void OnWOSChanging(string value);
    partial void OnWOSChanged();
    partial void OnDOIChanging(string value);
    partial void OnDOIChanged();
    partial void OnIDDetaliiChanging(int value);
    partial void OnIDDetaliiChanged();
    partial void OnJurnalChanging(string value);
    partial void OnJurnalChanged();
    #endregion
		
		public Articole()
		{
			this._Autori_Articoles = new EntitySet<Autori_Articole>(new Action<Autori_Articole>(this.attach_Autori_Articoles), new Action<Autori_Articole>(this.detach_Autori_Articoles));
			this._Citaris = new EntitySet<Citari>(new Action<Citari>(this.attach_Citaris), new Action<Citari>(this.detach_Citaris));
			this._Publicatii = default(EntityRef<Publicatii>);
			this._Detalii = default(EntityRef<Detalii>);
			this._ModPrezentare = default(EntityRef<ModPrezentare>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDArticol", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDArticol
		{
			get
			{
				return this._IDArticol;
			}
			set
			{
				if ((this._IDArticol != value))
				{
					this.OnIDArticolChanging(value);
					this.SendPropertyChanging();
					this._IDArticol = value;
					this.SendPropertyChanged("IDArticol");
					this.OnIDArticolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nume", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Nume
		{
			get
			{
				return this._Nume;
			}
			set
			{
				if ((this._Nume != value))
				{
					this.OnNumeChanging(value);
					this.SendPropertyChanging();
					this._Nume = value;
					this.SendPropertyChanged("Nume");
					this.OnNumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactorImpact", DbType="Float")]
		public System.Nullable<double> FactorImpact
		{
			get
			{
				return this._FactorImpact;
			}
			set
			{
				if ((this._FactorImpact != value))
				{
					this.OnFactorImpactChanging(value);
					this.SendPropertyChanging();
					this._FactorImpact = value;
					this.SendPropertyChanged("FactorImpact");
					this.OnFactorImpactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPublicatie", DbType="Int NOT NULL")]
		public int IDPublicatie
		{
			get
			{
				return this._IDPublicatie;
			}
			set
			{
				if ((this._IDPublicatie != value))
				{
					if (this._Publicatii.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPublicatieChanging(value);
					this.SendPropertyChanging();
					this._IDPublicatie = value;
					this.SendPropertyChanged("IDPublicatie");
					this.OnIDPublicatieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMod", DbType="Int NOT NULL")]
		public int IDMod
		{
			get
			{
				return this._IDMod;
			}
			set
			{
				if ((this._IDMod != value))
				{
					if (this._ModPrezentare.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDModChanging(value);
					this.SendPropertyChanging();
					this._IDMod = value;
					this.SendPropertyChanged("IDMod");
					this.OnIDModChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WOS", DbType="NVarChar(50)")]
		public string WOS
		{
			get
			{
				return this._WOS;
			}
			set
			{
				if ((this._WOS != value))
				{
					this.OnWOSChanging(value);
					this.SendPropertyChanging();
					this._WOS = value;
					this.SendPropertyChanged("WOS");
					this.OnWOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOI", DbType="NVarChar(50)")]
		public string DOI
		{
			get
			{
				return this._DOI;
			}
			set
			{
				if ((this._DOI != value))
				{
					this.OnDOIChanging(value);
					this.SendPropertyChanging();
					this._DOI = value;
					this.SendPropertyChanged("DOI");
					this.OnDOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDetalii", DbType="Int NOT NULL")]
		public int IDDetalii
		{
			get
			{
				return this._IDDetalii;
			}
			set
			{
				if ((this._IDDetalii != value))
				{
					if (this._Detalii.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDetaliiChanging(value);
					this.SendPropertyChanging();
					this._IDDetalii = value;
					this.SendPropertyChanged("IDDetalii");
					this.OnIDDetaliiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jurnal", DbType="NVarChar(200)")]
		public string Jurnal
		{
			get
			{
				return this._Jurnal;
			}
			set
			{
				if ((this._Jurnal != value))
				{
					this.OnJurnalChanging(value);
					this.SendPropertyChanging();
					this._Jurnal = value;
					this.SendPropertyChanged("Jurnal");
					this.OnJurnalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Articole_Autori_Articole", Storage="_Autori_Articoles", ThisKey="IDArticol", OtherKey="IDArticol")]
		public EntitySet<Autori_Articole> Autori_Articoles
		{
			get
			{
				return this._Autori_Articoles;
			}
			set
			{
				this._Autori_Articoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Articole_Citari", Storage="_Citaris", ThisKey="IDArticol", OtherKey="IDArticol")]
		public EntitySet<Citari> Citaris
		{
			get
			{
				return this._Citaris;
			}
			set
			{
				this._Citaris.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Publicatii_Articole", Storage="_Publicatii", ThisKey="IDPublicatie", OtherKey="IDPublicatie", IsForeignKey=true)]
		public Publicatii Publicatii
		{
			get
			{
				return this._Publicatii.Entity;
			}
			set
			{
				Publicatii previousValue = this._Publicatii.Entity;
				if (((previousValue != value) 
							|| (this._Publicatii.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Publicatii.Entity = null;
						previousValue.Articoles.Remove(this);
					}
					this._Publicatii.Entity = value;
					if ((value != null))
					{
						value.Articoles.Add(this);
						this._IDPublicatie = value.IDPublicatie;
					}
					else
					{
						this._IDPublicatie = default(int);
					}
					this.SendPropertyChanged("Publicatii");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Detalii_Articole", Storage="_Detalii", ThisKey="IDDetalii", OtherKey="IDDetalii", IsForeignKey=true)]
		public Detalii Detalii
		{
			get
			{
				return this._Detalii.Entity;
			}
			set
			{
				Detalii previousValue = this._Detalii.Entity;
				if (((previousValue != value) 
							|| (this._Detalii.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Detalii.Entity = null;
						previousValue.Articoles.Remove(this);
					}
					this._Detalii.Entity = value;
					if ((value != null))
					{
						value.Articoles.Add(this);
						this._IDDetalii = value.IDDetalii;
					}
					else
					{
						this._IDDetalii = default(int);
					}
					this.SendPropertyChanged("Detalii");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ModPrezentare_Articole", Storage="_ModPrezentare", ThisKey="IDMod", OtherKey="IDMod", IsForeignKey=true)]
		public ModPrezentare ModPrezentare
		{
			get
			{
				return this._ModPrezentare.Entity;
			}
			set
			{
				ModPrezentare previousValue = this._ModPrezentare.Entity;
				if (((previousValue != value) 
							|| (this._ModPrezentare.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ModPrezentare.Entity = null;
						previousValue.Articoles.Remove(this);
					}
					this._ModPrezentare.Entity = value;
					if ((value != null))
					{
						value.Articoles.Add(this);
						this._IDMod = value.IDMod;
					}
					else
					{
						this._IDMod = default(int);
					}
					this.SendPropertyChanged("ModPrezentare");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Autori_Articoles(Autori_Articole entity)
		{
			this.SendPropertyChanging();
			entity.Articole = this;
		}
		
		private void detach_Autori_Articoles(Autori_Articole entity)
		{
			this.SendPropertyChanging();
			entity.Articole = null;
		}
		
		private void attach_Citaris(Citari entity)
		{
			this.SendPropertyChanging();
			entity.Articole = this;
		}
		
		private void detach_Citaris(Citari entity)
		{
			this.SendPropertyChanging();
			entity.Articole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Autor_Afiliere")]
	public partial class Autor_Afiliere : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDAutor;
		
		private int _IDAfiliere;
		
		private EntityRef<Autori> _Autori;
		
		private EntityRef<Afilieri> _Afilieri;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDAutorChanging(int value);
    partial void OnIDAutorChanged();
    partial void OnIDAfiliereChanging(int value);
    partial void OnIDAfiliereChanged();
    #endregion
		
		public Autor_Afiliere()
		{
			this._Autori = default(EntityRef<Autori>);
			this._Afilieri = default(EntityRef<Afilieri>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAutor", DbType="Int NOT NULL")]
		public int IDAutor
		{
			get
			{
				return this._IDAutor;
			}
			set
			{
				if ((this._IDAutor != value))
				{
					if (this._Autori.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDAutorChanging(value);
					this.SendPropertyChanging();
					this._IDAutor = value;
					this.SendPropertyChanged("IDAutor");
					this.OnIDAutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAfiliere", DbType="Int NOT NULL")]
		public int IDAfiliere
		{
			get
			{
				return this._IDAfiliere;
			}
			set
			{
				if ((this._IDAfiliere != value))
				{
					if (this._Afilieri.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDAfiliereChanging(value);
					this.SendPropertyChanging();
					this._IDAfiliere = value;
					this.SendPropertyChanged("IDAfiliere");
					this.OnIDAfiliereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Autori_Autor_Afiliere", Storage="_Autori", ThisKey="IDAutor", OtherKey="IDAutor", IsForeignKey=true)]
		public Autori Autori
		{
			get
			{
				return this._Autori.Entity;
			}
			set
			{
				Autori previousValue = this._Autori.Entity;
				if (((previousValue != value) 
							|| (this._Autori.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Autori.Entity = null;
						previousValue.Autor_Afilieres.Remove(this);
					}
					this._Autori.Entity = value;
					if ((value != null))
					{
						value.Autor_Afilieres.Add(this);
						this._IDAutor = value.IDAutor;
					}
					else
					{
						this._IDAutor = default(int);
					}
					this.SendPropertyChanged("Autori");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Afilieri_Autor_Afiliere", Storage="_Afilieri", ThisKey="IDAfiliere", OtherKey="IDAfiliere", IsForeignKey=true)]
		public Afilieri Afilieri
		{
			get
			{
				return this._Afilieri.Entity;
			}
			set
			{
				Afilieri previousValue = this._Afilieri.Entity;
				if (((previousValue != value) 
							|| (this._Afilieri.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Afilieri.Entity = null;
						previousValue.Autor_Afilieres.Remove(this);
					}
					this._Afilieri.Entity = value;
					if ((value != null))
					{
						value.Autor_Afilieres.Add(this);
						this._IDAfiliere = value.IDAfiliere;
					}
					else
					{
						this._IDAfiliere = default(int);
					}
					this.SendPropertyChanged("Afilieri");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Autori")]
	public partial class Autori : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDAutor;
		
		private string _Nume;
		
		private string _Prenume;
		
		private string _UEFID;
		
		private string _Link;
		
		private EntitySet<Autor_Afiliere> _Autor_Afilieres;
		
		private EntitySet<Autori_Articole> _Autori_Articoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDAutorChanging(int value);
    partial void OnIDAutorChanged();
    partial void OnNumeChanging(string value);
    partial void OnNumeChanged();
    partial void OnPrenumeChanging(string value);
    partial void OnPrenumeChanged();
    partial void OnUEFIDChanging(string value);
    partial void OnUEFIDChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    #endregion
		
		public Autori()
		{
			this._Autor_Afilieres = new EntitySet<Autor_Afiliere>(new Action<Autor_Afiliere>(this.attach_Autor_Afilieres), new Action<Autor_Afiliere>(this.detach_Autor_Afilieres));
			this._Autori_Articoles = new EntitySet<Autori_Articole>(new Action<Autori_Articole>(this.attach_Autori_Articoles), new Action<Autori_Articole>(this.detach_Autori_Articoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAutor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDAutor
		{
			get
			{
				return this._IDAutor;
			}
			set
			{
				if ((this._IDAutor != value))
				{
					this.OnIDAutorChanging(value);
					this.SendPropertyChanging();
					this._IDAutor = value;
					this.SendPropertyChanged("IDAutor");
					this.OnIDAutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nume", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Nume
		{
			get
			{
				return this._Nume;
			}
			set
			{
				if ((this._Nume != value))
				{
					this.OnNumeChanging(value);
					this.SendPropertyChanging();
					this._Nume = value;
					this.SendPropertyChanged("Nume");
					this.OnNumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenume", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Prenume
		{
			get
			{
				return this._Prenume;
			}
			set
			{
				if ((this._Prenume != value))
				{
					this.OnPrenumeChanging(value);
					this.SendPropertyChanging();
					this._Prenume = value;
					this.SendPropertyChanged("Prenume");
					this.OnPrenumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UEFID", DbType="NVarChar(50)")]
		public string UEFID
		{
			get
			{
				return this._UEFID;
			}
			set
			{
				if ((this._UEFID != value))
				{
					this.OnUEFIDChanging(value);
					this.SendPropertyChanging();
					this._UEFID = value;
					this.SendPropertyChanged("UEFID");
					this.OnUEFIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(200)")]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Autori_Autor_Afiliere", Storage="_Autor_Afilieres", ThisKey="IDAutor", OtherKey="IDAutor")]
		public EntitySet<Autor_Afiliere> Autor_Afilieres
		{
			get
			{
				return this._Autor_Afilieres;
			}
			set
			{
				this._Autor_Afilieres.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Autori_Autori_Articole", Storage="_Autori_Articoles", ThisKey="IDAutor", OtherKey="IDAutor")]
		public EntitySet<Autori_Articole> Autori_Articoles
		{
			get
			{
				return this._Autori_Articoles;
			}
			set
			{
				this._Autori_Articoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Autor_Afilieres(Autor_Afiliere entity)
		{
			this.SendPropertyChanging();
			entity.Autori = this;
		}
		
		private void detach_Autor_Afilieres(Autor_Afiliere entity)
		{
			this.SendPropertyChanging();
			entity.Autori = null;
		}
		
		private void attach_Autori_Articoles(Autori_Articole entity)
		{
			this.SendPropertyChanging();
			entity.Autori = this;
		}
		
		private void detach_Autori_Articoles(Autori_Articole entity)
		{
			this.SendPropertyChanging();
			entity.Autori = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Autori_Articole")]
	public partial class Autori_Articole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDAutor;
		
		private int _IDArticol;
		
		private int _TipAutor;
		
		private EntityRef<Articole> _Articole;
		
		private EntityRef<Autori> _Autori;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDAutorChanging(int value);
    partial void OnIDAutorChanged();
    partial void OnIDArticolChanging(int value);
    partial void OnIDArticolChanged();
    partial void OnTipAutorChanging(int value);
    partial void OnTipAutorChanged();
    #endregion
		
		public Autori_Articole()
		{
			this._Articole = default(EntityRef<Articole>);
			this._Autori = default(EntityRef<Autori>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAutor", DbType="Int NOT NULL")]
		public int IDAutor
		{
			get
			{
				return this._IDAutor;
			}
			set
			{
				if ((this._IDAutor != value))
				{
					if (this._Autori.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDAutorChanging(value);
					this.SendPropertyChanging();
					this._IDAutor = value;
					this.SendPropertyChanged("IDAutor");
					this.OnIDAutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDArticol", DbType="Int NOT NULL")]
		public int IDArticol
		{
			get
			{
				return this._IDArticol;
			}
			set
			{
				if ((this._IDArticol != value))
				{
					if (this._Articole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDArticolChanging(value);
					this.SendPropertyChanging();
					this._IDArticol = value;
					this.SendPropertyChanged("IDArticol");
					this.OnIDArticolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipAutor", DbType="Int NOT NULL")]
		public int TipAutor
		{
			get
			{
				return this._TipAutor;
			}
			set
			{
				if ((this._TipAutor != value))
				{
					this.OnTipAutorChanging(value);
					this.SendPropertyChanging();
					this._TipAutor = value;
					this.SendPropertyChanged("TipAutor");
					this.OnTipAutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Articole_Autori_Articole", Storage="_Articole", ThisKey="IDArticol", OtherKey="IDArticol", IsForeignKey=true)]
		public Articole Articole
		{
			get
			{
				return this._Articole.Entity;
			}
			set
			{
				Articole previousValue = this._Articole.Entity;
				if (((previousValue != value) 
							|| (this._Articole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Articole.Entity = null;
						previousValue.Autori_Articoles.Remove(this);
					}
					this._Articole.Entity = value;
					if ((value != null))
					{
						value.Autori_Articoles.Add(this);
						this._IDArticol = value.IDArticol;
					}
					else
					{
						this._IDArticol = default(int);
					}
					this.SendPropertyChanged("Articole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Autori_Autori_Articole", Storage="_Autori", ThisKey="IDAutor", OtherKey="IDAutor", IsForeignKey=true)]
		public Autori Autori
		{
			get
			{
				return this._Autori.Entity;
			}
			set
			{
				Autori previousValue = this._Autori.Entity;
				if (((previousValue != value) 
							|| (this._Autori.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Autori.Entity = null;
						previousValue.Autori_Articoles.Remove(this);
					}
					this._Autori.Entity = value;
					if ((value != null))
					{
						value.Autori_Articoles.Add(this);
						this._IDAutor = value.IDAutor;
					}
					else
					{
						this._IDAutor = default(int);
					}
					this.SendPropertyChanged("Autori");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Citari")]
	public partial class Citari : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCitare;
		
		private int _IDArticol;
		
		private int _Total;
		
		private int _ISI;
		
		private int _BDI;
		
		private EntitySet<DOI_Citari> _DOI_Citaris;
		
		private EntityRef<Articole> _Articole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCitareChanging(int value);
    partial void OnIDCitareChanged();
    partial void OnIDArticolChanging(int value);
    partial void OnIDArticolChanged();
    partial void OnTotalChanging(int value);
    partial void OnTotalChanged();
    partial void OnISIChanging(int value);
    partial void OnISIChanged();
    partial void OnBDIChanging(int value);
    partial void OnBDIChanged();
    #endregion
		
		public Citari()
		{
			this._DOI_Citaris = new EntitySet<DOI_Citari>(new Action<DOI_Citari>(this.attach_DOI_Citaris), new Action<DOI_Citari>(this.detach_DOI_Citaris));
			this._Articole = default(EntityRef<Articole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCitare", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDCitare
		{
			get
			{
				return this._IDCitare;
			}
			set
			{
				if ((this._IDCitare != value))
				{
					this.OnIDCitareChanging(value);
					this.SendPropertyChanging();
					this._IDCitare = value;
					this.SendPropertyChanged("IDCitare");
					this.OnIDCitareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDArticol", DbType="Int NOT NULL")]
		public int IDArticol
		{
			get
			{
				return this._IDArticol;
			}
			set
			{
				if ((this._IDArticol != value))
				{
					if (this._Articole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDArticolChanging(value);
					this.SendPropertyChanging();
					this._IDArticol = value;
					this.SendPropertyChanged("IDArticol");
					this.OnIDArticolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Int NOT NULL")]
		public int Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISI", DbType="Int NOT NULL")]
		public int ISI
		{
			get
			{
				return this._ISI;
			}
			set
			{
				if ((this._ISI != value))
				{
					this.OnISIChanging(value);
					this.SendPropertyChanging();
					this._ISI = value;
					this.SendPropertyChanged("ISI");
					this.OnISIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI", DbType="Int NOT NULL")]
		public int BDI
		{
			get
			{
				return this._BDI;
			}
			set
			{
				if ((this._BDI != value))
				{
					this.OnBDIChanging(value);
					this.SendPropertyChanging();
					this._BDI = value;
					this.SendPropertyChanged("BDI");
					this.OnBDIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Citari_DOI_Citari", Storage="_DOI_Citaris", ThisKey="IDCitare", OtherKey="IDCitare")]
		public EntitySet<DOI_Citari> DOI_Citaris
		{
			get
			{
				return this._DOI_Citaris;
			}
			set
			{
				this._DOI_Citaris.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Articole_Citari", Storage="_Articole", ThisKey="IDArticol", OtherKey="IDArticol", IsForeignKey=true)]
		public Articole Articole
		{
			get
			{
				return this._Articole.Entity;
			}
			set
			{
				Articole previousValue = this._Articole.Entity;
				if (((previousValue != value) 
							|| (this._Articole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Articole.Entity = null;
						previousValue.Citaris.Remove(this);
					}
					this._Articole.Entity = value;
					if ((value != null))
					{
						value.Citaris.Add(this);
						this._IDArticol = value.IDArticol;
					}
					else
					{
						this._IDArticol = default(int);
					}
					this.SendPropertyChanged("Articole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DOI_Citaris(DOI_Citari entity)
		{
			this.SendPropertyChanging();
			entity.Citari = this;
		}
		
		private void detach_DOI_Citaris(DOI_Citari entity)
		{
			this.SendPropertyChanging();
			entity.Citari = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Detalii")]
	public partial class Detalii : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDDetalii;
		
		private System.Nullable<int> _An;
		
		private string _Pagina;
		
		private string _Volum;
		
		private System.Nullable<int> _Numar;
		
		private EntitySet<Articole> _Articoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDetaliiChanging(int value);
    partial void OnIDDetaliiChanged();
    partial void OnAnChanging(System.Nullable<int> value);
    partial void OnAnChanged();
    partial void OnPaginaChanging(string value);
    partial void OnPaginaChanged();
    partial void OnVolumChanging(string value);
    partial void OnVolumChanged();
    partial void OnNumarChanging(System.Nullable<int> value);
    partial void OnNumarChanged();
    #endregion
		
		public Detalii()
		{
			this._Articoles = new EntitySet<Articole>(new Action<Articole>(this.attach_Articoles), new Action<Articole>(this.detach_Articoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDetalii", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDDetalii
		{
			get
			{
				return this._IDDetalii;
			}
			set
			{
				if ((this._IDDetalii != value))
				{
					this.OnIDDetaliiChanging(value);
					this.SendPropertyChanging();
					this._IDDetalii = value;
					this.SendPropertyChanged("IDDetalii");
					this.OnIDDetaliiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_An", DbType="Int")]
		public System.Nullable<int> An
		{
			get
			{
				return this._An;
			}
			set
			{
				if ((this._An != value))
				{
					this.OnAnChanging(value);
					this.SendPropertyChanging();
					this._An = value;
					this.SendPropertyChanged("An");
					this.OnAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pagina", DbType="NVarChar(50)")]
		public string Pagina
		{
			get
			{
				return this._Pagina;
			}
			set
			{
				if ((this._Pagina != value))
				{
					this.OnPaginaChanging(value);
					this.SendPropertyChanging();
					this._Pagina = value;
					this.SendPropertyChanged("Pagina");
					this.OnPaginaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volum", DbType="NVarChar(50)")]
		public string Volum
		{
			get
			{
				return this._Volum;
			}
			set
			{
				if ((this._Volum != value))
				{
					this.OnVolumChanging(value);
					this.SendPropertyChanging();
					this._Volum = value;
					this.SendPropertyChanged("Volum");
					this.OnVolumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numar", DbType="Int")]
		public System.Nullable<int> Numar
		{
			get
			{
				return this._Numar;
			}
			set
			{
				if ((this._Numar != value))
				{
					this.OnNumarChanging(value);
					this.SendPropertyChanging();
					this._Numar = value;
					this.SendPropertyChanged("Numar");
					this.OnNumarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Detalii_Articole", Storage="_Articoles", ThisKey="IDDetalii", OtherKey="IDDetalii")]
		public EntitySet<Articole> Articoles
		{
			get
			{
				return this._Articoles;
			}
			set
			{
				this._Articoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Articoles(Articole entity)
		{
			this.SendPropertyChanging();
			entity.Detalii = this;
		}
		
		private void detach_Articoles(Articole entity)
		{
			this.SendPropertyChanging();
			entity.Detalii = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DOI_Citari")]
	public partial class DOI_Citari : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDCitare;
		
		private string _DOI;
		
		private EntityRef<Citari> _Citari;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDCitareChanging(int value);
    partial void OnIDCitareChanged();
    partial void OnDOIChanging(string value);
    partial void OnDOIChanged();
    #endregion
		
		public DOI_Citari()
		{
			this._Citari = default(EntityRef<Citari>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCitare", DbType="Int NOT NULL")]
		public int IDCitare
		{
			get
			{
				return this._IDCitare;
			}
			set
			{
				if ((this._IDCitare != value))
				{
					if (this._Citari.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCitareChanging(value);
					this.SendPropertyChanging();
					this._IDCitare = value;
					this.SendPropertyChanged("IDCitare");
					this.OnIDCitareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOI", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string DOI
		{
			get
			{
				return this._DOI;
			}
			set
			{
				if ((this._DOI != value))
				{
					this.OnDOIChanging(value);
					this.SendPropertyChanging();
					this._DOI = value;
					this.SendPropertyChanged("DOI");
					this.OnDOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Citari_DOI_Citari", Storage="_Citari", ThisKey="IDCitare", OtherKey="IDCitare", IsForeignKey=true)]
		public Citari Citari
		{
			get
			{
				return this._Citari.Entity;
			}
			set
			{
				Citari previousValue = this._Citari.Entity;
				if (((previousValue != value) 
							|| (this._Citari.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Citari.Entity = null;
						previousValue.DOI_Citaris.Remove(this);
					}
					this._Citari.Entity = value;
					if ((value != null))
					{
						value.DOI_Citaris.Add(this);
						this._IDCitare = value.IDCitare;
					}
					else
					{
						this._IDCitare = default(int);
					}
					this.SendPropertyChanged("Citari");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModPrezentare")]
	public partial class ModPrezentare : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDMod;
		
		private string _Tip;
		
		private EntitySet<Articole> _Articoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDModChanging(int value);
    partial void OnIDModChanged();
    partial void OnTipChanging(string value);
    partial void OnTipChanged();
    #endregion
		
		public ModPrezentare()
		{
			this._Articoles = new EntitySet<Articole>(new Action<Articole>(this.attach_Articoles), new Action<Articole>(this.detach_Articoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMod", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDMod
		{
			get
			{
				return this._IDMod;
			}
			set
			{
				if ((this._IDMod != value))
				{
					this.OnIDModChanging(value);
					this.SendPropertyChanging();
					this._IDMod = value;
					this.SendPropertyChanged("IDMod");
					this.OnIDModChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tip", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Tip
		{
			get
			{
				return this._Tip;
			}
			set
			{
				if ((this._Tip != value))
				{
					this.OnTipChanging(value);
					this.SendPropertyChanging();
					this._Tip = value;
					this.SendPropertyChanged("Tip");
					this.OnTipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ModPrezentare_Articole", Storage="_Articoles", ThisKey="IDMod", OtherKey="IDMod")]
		public EntitySet<Articole> Articoles
		{
			get
			{
				return this._Articoles;
			}
			set
			{
				this._Articoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Articoles(Articole entity)
		{
			this.SendPropertyChanging();
			entity.ModPrezentare = this;
		}
		
		private void detach_Articoles(Articole entity)
		{
			this.SendPropertyChanging();
			entity.ModPrezentare = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Afilieri")]
	public partial class Afilieri : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDAfiliere;
		
		private string _Nume;
		
		private EntitySet<Autor_Afiliere> _Autor_Afilieres;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDAfiliereChanging(int value);
    partial void OnIDAfiliereChanged();
    partial void OnNumeChanging(string value);
    partial void OnNumeChanged();
    #endregion
		
		public Afilieri()
		{
			this._Autor_Afilieres = new EntitySet<Autor_Afiliere>(new Action<Autor_Afiliere>(this.attach_Autor_Afilieres), new Action<Autor_Afiliere>(this.detach_Autor_Afilieres));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAfiliere", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDAfiliere
		{
			get
			{
				return this._IDAfiliere;
			}
			set
			{
				if ((this._IDAfiliere != value))
				{
					this.OnIDAfiliereChanging(value);
					this.SendPropertyChanging();
					this._IDAfiliere = value;
					this.SendPropertyChanged("IDAfiliere");
					this.OnIDAfiliereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nume", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Nume
		{
			get
			{
				return this._Nume;
			}
			set
			{
				if ((this._Nume != value))
				{
					this.OnNumeChanging(value);
					this.SendPropertyChanging();
					this._Nume = value;
					this.SendPropertyChanged("Nume");
					this.OnNumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Afilieri_Autor_Afiliere", Storage="_Autor_Afilieres", ThisKey="IDAfiliere", OtherKey="IDAfiliere")]
		public EntitySet<Autor_Afiliere> Autor_Afilieres
		{
			get
			{
				return this._Autor_Afilieres;
			}
			set
			{
				this._Autor_Afilieres.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Autor_Afilieres(Autor_Afiliere entity)
		{
			this.SendPropertyChanging();
			entity.Afilieri = this;
		}
		
		private void detach_Autor_Afilieres(Autor_Afiliere entity)
		{
			this.SendPropertyChanging();
			entity.Afilieri = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Tip Publicatie]")]
	public partial class Tip_Publicatie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTipPublicatie;
		
		private string _Tip;
		
		private EntitySet<Publicatii> _Publicatiis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTipPublicatieChanging(int value);
    partial void OnIDTipPublicatieChanged();
    partial void OnTipChanging(string value);
    partial void OnTipChanged();
    #endregion
		
		public Tip_Publicatie()
		{
			this._Publicatiis = new EntitySet<Publicatii>(new Action<Publicatii>(this.attach_Publicatiis), new Action<Publicatii>(this.detach_Publicatiis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTipPublicatie", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTipPublicatie
		{
			get
			{
				return this._IDTipPublicatie;
			}
			set
			{
				if ((this._IDTipPublicatie != value))
				{
					this.OnIDTipPublicatieChanging(value);
					this.SendPropertyChanging();
					this._IDTipPublicatie = value;
					this.SendPropertyChanged("IDTipPublicatie");
					this.OnIDTipPublicatieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tip", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Tip
		{
			get
			{
				return this._Tip;
			}
			set
			{
				if ((this._Tip != value))
				{
					this.OnTipChanging(value);
					this.SendPropertyChanging();
					this._Tip = value;
					this.SendPropertyChanged("Tip");
					this.OnTipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tip_Publicatie_Publicatii", Storage="_Publicatiis", ThisKey="IDTipPublicatie", OtherKey="TipPublicatie")]
		public EntitySet<Publicatii> Publicatiis
		{
			get
			{
				return this._Publicatiis;
			}
			set
			{
				this._Publicatiis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Publicatiis(Publicatii entity)
		{
			this.SendPropertyChanging();
			entity.Tip_Publicatie = this;
		}
		
		private void detach_Publicatiis(Publicatii entity)
		{
			this.SendPropertyChanging();
			entity.Tip_Publicatie = null;
		}
	}
}
#pragma warning restore 1591
