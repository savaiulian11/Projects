#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BD_Proiect
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BD_Proiect")]
	public partial class appDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAutor(Autor instance);
    partial void UpdateAutor(Autor instance);
    partial void DeleteAutor(Autor instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertClienti(Clienti instance);
    partial void UpdateClienti(Clienti instance);
    partial void DeleteClienti(Clienti instance);
    partial void InsertComenzi(Comenzi instance);
    partial void UpdateComenzi(Comenzi instance);
    partial void DeleteComenzi(Comenzi instance);
    partial void InsertComenzi_Opere_De_Arta(Comenzi_Opere_De_Arta instance);
    partial void UpdateComenzi_Opere_De_Arta(Comenzi_Opere_De_Arta instance);
    partial void DeleteComenzi_Opere_De_Arta(Comenzi_Opere_De_Arta instance);
    partial void InsertExpozitie(Expozitie instance);
    partial void UpdateExpozitie(Expozitie instance);
    partial void DeleteExpozitie(Expozitie instance);
    partial void InsertExpozitii_Opere_De_Arta(Expozitii_Opere_De_Arta instance);
    partial void UpdateExpozitii_Opere_De_Arta(Expozitii_Opere_De_Arta instance);
    partial void DeleteExpozitii_Opere_De_Arta(Expozitii_Opere_De_Arta instance);
    partial void InsertGalerii(Galerii instance);
    partial void UpdateGalerii(Galerii instance);
    partial void DeleteGalerii(Galerii instance);
    partial void InsertOpere_De_Arta(Opere_De_Arta instance);
    partial void UpdateOpere_De_Arta(Opere_De_Arta instance);
    partial void DeleteOpere_De_Arta(Opere_De_Arta instance);
    #endregion
		
		public appDBDataContext() : 
				base(global::BD_Proiect.Properties.Settings.Default.BD_ProiectConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public appDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public appDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public appDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public appDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Autor> Autors
		{
			get
			{
				return this.GetTable<Autor>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Clienti> Clientis
		{
			get
			{
				return this.GetTable<Clienti>();
			}
		}
		
		public System.Data.Linq.Table<Comenzi> Comenzis
		{
			get
			{
				return this.GetTable<Comenzi>();
			}
		}
		
		public System.Data.Linq.Table<Comenzi_Opere_De_Arta> Comenzi_Opere_De_Artas
		{
			get
			{
				return this.GetTable<Comenzi_Opere_De_Arta>();
			}
		}
		
		public System.Data.Linq.Table<Expozitie> Expozities
		{
			get
			{
				return this.GetTable<Expozitie>();
			}
		}
		
		public System.Data.Linq.Table<Expozitii_Opere_De_Arta> Expozitii_Opere_De_Artas
		{
			get
			{
				return this.GetTable<Expozitii_Opere_De_Arta>();
			}
		}
		
		public System.Data.Linq.Table<Galerii> Galeriis
		{
			get
			{
				return this.GetTable<Galerii>();
			}
		}
		
		public System.Data.Linq.Table<Opere_De_Arta> Opere_De_Artas
		{
			get
			{
				return this.GetTable<Opere_De_Arta>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Autor")]
	public partial class Autor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Autor;
		
		private string _Nume;
		
		private string _Prenume;
		
		private System.DateTime _Data_Nastere;
		
		private EntitySet<Opere_De_Arta> _Opere_De_Artas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_AutorChanging(int value);
    partial void OnID_AutorChanged();
    partial void OnNumeChanging(string value);
    partial void OnNumeChanged();
    partial void OnPrenumeChanging(string value);
    partial void OnPrenumeChanged();
    partial void OnData_NastereChanging(System.DateTime value);
    partial void OnData_NastereChanged();
    #endregion
		
		public Autor()
		{
			this._Opere_De_Artas = new EntitySet<Opere_De_Arta>(new Action<Opere_De_Arta>(this.attach_Opere_De_Artas), new Action<Opere_De_Arta>(this.detach_Opere_De_Artas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Autor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Autor
		{
			get
			{
				return this._ID_Autor;
			}
			set
			{
				if ((this._ID_Autor != value))
				{
					this.OnID_AutorChanging(value);
					this.SendPropertyChanging();
					this._ID_Autor = value;
					this.SendPropertyChanged("ID_Autor");
					this.OnID_AutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nume", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string Nume
		{
			get
			{
				return this._Nume;
			}
			set
			{
				if ((this._Nume != value))
				{
					this.OnNumeChanging(value);
					this.SendPropertyChanging();
					this._Nume = value;
					this.SendPropertyChanged("Nume");
					this.OnNumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenume", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string Prenume
		{
			get
			{
				return this._Prenume;
			}
			set
			{
				if ((this._Prenume != value))
				{
					this.OnPrenumeChanging(value);
					this.SendPropertyChanging();
					this._Prenume = value;
					this.SendPropertyChanged("Prenume");
					this.OnPrenumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Nastere", DbType="Date NOT NULL")]
		public System.DateTime Data_Nastere
		{
			get
			{
				return this._Data_Nastere;
			}
			set
			{
				if ((this._Data_Nastere != value))
				{
					this.OnData_NastereChanging(value);
					this.SendPropertyChanging();
					this._Data_Nastere = value;
					this.SendPropertyChanged("Data_Nastere");
					this.OnData_NastereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Autor_Opere_De_Arta", Storage="_Opere_De_Artas", ThisKey="ID_Autor", OtherKey="ID_Autor")]
		public EntitySet<Opere_De_Arta> Opere_De_Artas
		{
			get
			{
				return this._Opere_De_Artas;
			}
			set
			{
				this._Opere_De_Artas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Opere_De_Artas(Opere_De_Arta entity)
		{
			this.SendPropertyChanging();
			entity.Autor = this;
		}
		
		private void detach_Opere_De_Artas(Opere_De_Arta entity)
		{
			this.SendPropertyChanging();
			entity.Autor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Username;
		
		private string _Password;
		
		private int _UserType;
		
		private string _CNP;
		
		private EntitySet<Comenzi> _Comenzis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUserTypeChanging(int value);
    partial void OnUserTypeChanged();
    partial void OnCNPChanging(string value);
    partial void OnCNPChanged();
    #endregion
		
		public User()
		{
			this._Comenzis = new EntitySet<Comenzi>(new Action<Comenzi>(this.attach_Comenzis), new Action<Comenzi>(this.detach_Comenzis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="Int NOT NULL")]
		public int UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNP", DbType="Char(13)")]
		public string CNP
		{
			get
			{
				return this._CNP;
			}
			set
			{
				if ((this._CNP != value))
				{
					this.OnCNPChanging(value);
					this.SendPropertyChanging();
					this._CNP = value;
					this.SendPropertyChanged("CNP");
					this.OnCNPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comenzi", Storage="_Comenzis", ThisKey="ID", OtherKey="ID_User")]
		public EntitySet<Comenzi> Comenzis
		{
			get
			{
				return this._Comenzis;
			}
			set
			{
				this._Comenzis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comenzis(Comenzi entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Comenzis(Comenzi entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clienti")]
	public partial class Clienti : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Client;
		
		private string _Nume;
		
		private string _Prenume;
		
		private string _Numar_Telefon;
		
		private string _Adresa;
		
		private string _Localitate;
		
		private EntitySet<Comenzi> _Comenzis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ClientChanging(int value);
    partial void OnID_ClientChanged();
    partial void OnNumeChanging(string value);
    partial void OnNumeChanged();
    partial void OnPrenumeChanging(string value);
    partial void OnPrenumeChanged();
    partial void OnNumar_TelefonChanging(string value);
    partial void OnNumar_TelefonChanged();
    partial void OnAdresaChanging(string value);
    partial void OnAdresaChanged();
    partial void OnLocalitateChanging(string value);
    partial void OnLocalitateChanged();
    #endregion
		
		public Clienti()
		{
			this._Comenzis = new EntitySet<Comenzi>(new Action<Comenzi>(this.attach_Comenzis), new Action<Comenzi>(this.detach_Comenzis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Client", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Client
		{
			get
			{
				return this._ID_Client;
			}
			set
			{
				if ((this._ID_Client != value))
				{
					this.OnID_ClientChanging(value);
					this.SendPropertyChanging();
					this._ID_Client = value;
					this.SendPropertyChanged("ID_Client");
					this.OnID_ClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nume", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string Nume
		{
			get
			{
				return this._Nume;
			}
			set
			{
				if ((this._Nume != value))
				{
					this.OnNumeChanging(value);
					this.SendPropertyChanging();
					this._Nume = value;
					this.SendPropertyChanged("Nume");
					this.OnNumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenume", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string Prenume
		{
			get
			{
				return this._Prenume;
			}
			set
			{
				if ((this._Prenume != value))
				{
					this.OnPrenumeChanging(value);
					this.SendPropertyChanging();
					this._Prenume = value;
					this.SendPropertyChanged("Prenume");
					this.OnPrenumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numar_Telefon", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Numar_Telefon
		{
			get
			{
				return this._Numar_Telefon;
			}
			set
			{
				if ((this._Numar_Telefon != value))
				{
					this.OnNumar_TelefonChanging(value);
					this.SendPropertyChanging();
					this._Numar_Telefon = value;
					this.SendPropertyChanged("Numar_Telefon");
					this.OnNumar_TelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Adresa
		{
			get
			{
				return this._Adresa;
			}
			set
			{
				if ((this._Adresa != value))
				{
					this.OnAdresaChanging(value);
					this.SendPropertyChanging();
					this._Adresa = value;
					this.SendPropertyChanged("Adresa");
					this.OnAdresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Localitate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Localitate
		{
			get
			{
				return this._Localitate;
			}
			set
			{
				if ((this._Localitate != value))
				{
					this.OnLocalitateChanging(value);
					this.SendPropertyChanging();
					this._Localitate = value;
					this.SendPropertyChanged("Localitate");
					this.OnLocalitateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clienti_Comenzi", Storage="_Comenzis", ThisKey="ID_Client", OtherKey="ID_Client")]
		public EntitySet<Comenzi> Comenzis
		{
			get
			{
				return this._Comenzis;
			}
			set
			{
				this._Comenzis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comenzis(Comenzi entity)
		{
			this.SendPropertyChanging();
			entity.Clienti = this;
		}
		
		private void detach_Comenzis(Comenzi entity)
		{
			this.SendPropertyChanging();
			entity.Clienti = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comenzi")]
	public partial class Comenzi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Comanda;
		
		private int _ID_Client;
		
		private System.DateTime _Data_Plasare;
		
		private System.Nullable<System.DateTime> _Data_Livrare;
		
		private System.Nullable<int> _ID_User;
		
		private EntitySet<Comenzi_Opere_De_Arta> _Comenzi_Opere_De_Artas;
		
		private EntityRef<Clienti> _Clienti;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ComandaChanging(int value);
    partial void OnID_ComandaChanged();
    partial void OnID_ClientChanging(int value);
    partial void OnID_ClientChanged();
    partial void OnData_PlasareChanging(System.DateTime value);
    partial void OnData_PlasareChanged();
    partial void OnData_LivrareChanging(System.Nullable<System.DateTime> value);
    partial void OnData_LivrareChanged();
    partial void OnID_UserChanging(System.Nullable<int> value);
    partial void OnID_UserChanged();
    #endregion
		
		public Comenzi()
		{
			this._Comenzi_Opere_De_Artas = new EntitySet<Comenzi_Opere_De_Arta>(new Action<Comenzi_Opere_De_Arta>(this.attach_Comenzi_Opere_De_Artas), new Action<Comenzi_Opere_De_Arta>(this.detach_Comenzi_Opere_De_Artas));
			this._Clienti = default(EntityRef<Clienti>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Comanda", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Comanda
		{
			get
			{
				return this._ID_Comanda;
			}
			set
			{
				if ((this._ID_Comanda != value))
				{
					this.OnID_ComandaChanging(value);
					this.SendPropertyChanging();
					this._ID_Comanda = value;
					this.SendPropertyChanged("ID_Comanda");
					this.OnID_ComandaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Client", DbType="Int NOT NULL")]
		public int ID_Client
		{
			get
			{
				return this._ID_Client;
			}
			set
			{
				if ((this._ID_Client != value))
				{
					if (this._Clienti.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ClientChanging(value);
					this.SendPropertyChanging();
					this._ID_Client = value;
					this.SendPropertyChanged("ID_Client");
					this.OnID_ClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Plasare", DbType="Date NOT NULL")]
		public System.DateTime Data_Plasare
		{
			get
			{
				return this._Data_Plasare;
			}
			set
			{
				if ((this._Data_Plasare != value))
				{
					this.OnData_PlasareChanging(value);
					this.SendPropertyChanging();
					this._Data_Plasare = value;
					this.SendPropertyChanged("Data_Plasare");
					this.OnData_PlasareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Livrare", DbType="Date")]
		public System.Nullable<System.DateTime> Data_Livrare
		{
			get
			{
				return this._Data_Livrare;
			}
			set
			{
				if ((this._Data_Livrare != value))
				{
					this.OnData_LivrareChanging(value);
					this.SendPropertyChanging();
					this._Data_Livrare = value;
					this.SendPropertyChanged("Data_Livrare");
					this.OnData_LivrareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_User", DbType="Int")]
		public System.Nullable<int> ID_User
		{
			get
			{
				return this._ID_User;
			}
			set
			{
				if ((this._ID_User != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_UserChanging(value);
					this.SendPropertyChanging();
					this._ID_User = value;
					this.SendPropertyChanged("ID_User");
					this.OnID_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comenzi_Comenzi_Opere_De_Arta", Storage="_Comenzi_Opere_De_Artas", ThisKey="ID_Comanda", OtherKey="ID_Comenzi")]
		public EntitySet<Comenzi_Opere_De_Arta> Comenzi_Opere_De_Artas
		{
			get
			{
				return this._Comenzi_Opere_De_Artas;
			}
			set
			{
				this._Comenzi_Opere_De_Artas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clienti_Comenzi", Storage="_Clienti", ThisKey="ID_Client", OtherKey="ID_Client", IsForeignKey=true)]
		public Clienti Clienti
		{
			get
			{
				return this._Clienti.Entity;
			}
			set
			{
				Clienti previousValue = this._Clienti.Entity;
				if (((previousValue != value) 
							|| (this._Clienti.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clienti.Entity = null;
						previousValue.Comenzis.Remove(this);
					}
					this._Clienti.Entity = value;
					if ((value != null))
					{
						value.Comenzis.Add(this);
						this._ID_Client = value.ID_Client;
					}
					else
					{
						this._ID_Client = default(int);
					}
					this.SendPropertyChanged("Clienti");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comenzi", Storage="_User", ThisKey="ID_User", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Comenzis.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Comenzis.Add(this);
						this._ID_User = value.ID;
					}
					else
					{
						this._ID_User = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comenzi_Opere_De_Artas(Comenzi_Opere_De_Arta entity)
		{
			this.SendPropertyChanging();
			entity.Comenzi = this;
		}
		
		private void detach_Comenzi_Opere_De_Artas(Comenzi_Opere_De_Arta entity)
		{
			this.SendPropertyChanging();
			entity.Comenzi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comenzi_Opere_De_Arta")]
	public partial class Comenzi_Opere_De_Arta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ID_Opera;
		
		private int _ID_Comenzi;
		
		private EntityRef<Comenzi> _Comenzi;
		
		private EntityRef<Opere_De_Arta> _Opere_De_Arta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_OperaChanging(int value);
    partial void OnID_OperaChanged();
    partial void OnID_ComenziChanging(int value);
    partial void OnID_ComenziChanged();
    #endregion
		
		public Comenzi_Opere_De_Arta()
		{
			this._Comenzi = default(EntityRef<Comenzi>);
			this._Opere_De_Arta = default(EntityRef<Opere_De_Arta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Opera", DbType="Int NOT NULL")]
		public int ID_Opera
		{
			get
			{
				return this._ID_Opera;
			}
			set
			{
				if ((this._ID_Opera != value))
				{
					if (this._Opere_De_Arta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_OperaChanging(value);
					this.SendPropertyChanging();
					this._ID_Opera = value;
					this.SendPropertyChanged("ID_Opera");
					this.OnID_OperaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Comenzi", DbType="Int NOT NULL")]
		public int ID_Comenzi
		{
			get
			{
				return this._ID_Comenzi;
			}
			set
			{
				if ((this._ID_Comenzi != value))
				{
					if (this._Comenzi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ComenziChanging(value);
					this.SendPropertyChanging();
					this._ID_Comenzi = value;
					this.SendPropertyChanged("ID_Comenzi");
					this.OnID_ComenziChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comenzi_Comenzi_Opere_De_Arta", Storage="_Comenzi", ThisKey="ID_Comenzi", OtherKey="ID_Comanda", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Comenzi Comenzi
		{
			get
			{
				return this._Comenzi.Entity;
			}
			set
			{
				Comenzi previousValue = this._Comenzi.Entity;
				if (((previousValue != value) 
							|| (this._Comenzi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Comenzi.Entity = null;
						previousValue.Comenzi_Opere_De_Artas.Remove(this);
					}
					this._Comenzi.Entity = value;
					if ((value != null))
					{
						value.Comenzi_Opere_De_Artas.Add(this);
						this._ID_Comenzi = value.ID_Comanda;
					}
					else
					{
						this._ID_Comenzi = default(int);
					}
					this.SendPropertyChanged("Comenzi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Opere_De_Arta_Comenzi_Opere_De_Arta", Storage="_Opere_De_Arta", ThisKey="ID_Opera", OtherKey="ID_Opera", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Opere_De_Arta Opere_De_Arta
		{
			get
			{
				return this._Opere_De_Arta.Entity;
			}
			set
			{
				Opere_De_Arta previousValue = this._Opere_De_Arta.Entity;
				if (((previousValue != value) 
							|| (this._Opere_De_Arta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Opere_De_Arta.Entity = null;
						previousValue.Comenzi_Opere_De_Artas.Remove(this);
					}
					this._Opere_De_Arta.Entity = value;
					if ((value != null))
					{
						value.Comenzi_Opere_De_Artas.Add(this);
						this._ID_Opera = value.ID_Opera;
					}
					else
					{
						this._ID_Opera = default(int);
					}
					this.SendPropertyChanged("Opere_De_Arta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Expozitie")]
	public partial class Expozitie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Expozitie;
		
		private int _ID_Galerie;
		
		private string _Nume_Expozitie;
		
		private System.DateTime _Data_Inceput;
		
		private System.DateTime _Data_Sfarsit;
		
		private EntitySet<Expozitii_Opere_De_Arta> _Expozitii_Opere_De_Artas;
		
		private EntityRef<Galerii> _Galerii;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ExpozitieChanging(int value);
    partial void OnID_ExpozitieChanged();
    partial void OnID_GalerieChanging(int value);
    partial void OnID_GalerieChanged();
    partial void OnNume_ExpozitieChanging(string value);
    partial void OnNume_ExpozitieChanged();
    partial void OnData_InceputChanging(System.DateTime value);
    partial void OnData_InceputChanged();
    partial void OnData_SfarsitChanging(System.DateTime value);
    partial void OnData_SfarsitChanged();
    #endregion
		
		public Expozitie()
		{
			this._Expozitii_Opere_De_Artas = new EntitySet<Expozitii_Opere_De_Arta>(new Action<Expozitii_Opere_De_Arta>(this.attach_Expozitii_Opere_De_Artas), new Action<Expozitii_Opere_De_Arta>(this.detach_Expozitii_Opere_De_Artas));
			this._Galerii = default(EntityRef<Galerii>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Expozitie", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Expozitie
		{
			get
			{
				return this._ID_Expozitie;
			}
			set
			{
				if ((this._ID_Expozitie != value))
				{
					this.OnID_ExpozitieChanging(value);
					this.SendPropertyChanging();
					this._ID_Expozitie = value;
					this.SendPropertyChanged("ID_Expozitie");
					this.OnID_ExpozitieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Galerie", DbType="Int NOT NULL")]
		public int ID_Galerie
		{
			get
			{
				return this._ID_Galerie;
			}
			set
			{
				if ((this._ID_Galerie != value))
				{
					if (this._Galerii.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_GalerieChanging(value);
					this.SendPropertyChanging();
					this._ID_Galerie = value;
					this.SendPropertyChanged("ID_Galerie");
					this.OnID_GalerieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nume_Expozitie", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Nume_Expozitie
		{
			get
			{
				return this._Nume_Expozitie;
			}
			set
			{
				if ((this._Nume_Expozitie != value))
				{
					this.OnNume_ExpozitieChanging(value);
					this.SendPropertyChanging();
					this._Nume_Expozitie = value;
					this.SendPropertyChanged("Nume_Expozitie");
					this.OnNume_ExpozitieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Inceput", DbType="Date NOT NULL")]
		public System.DateTime Data_Inceput
		{
			get
			{
				return this._Data_Inceput;
			}
			set
			{
				if ((this._Data_Inceput != value))
				{
					this.OnData_InceputChanging(value);
					this.SendPropertyChanging();
					this._Data_Inceput = value;
					this.SendPropertyChanged("Data_Inceput");
					this.OnData_InceputChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Sfarsit", DbType="Date NOT NULL")]
		public System.DateTime Data_Sfarsit
		{
			get
			{
				return this._Data_Sfarsit;
			}
			set
			{
				if ((this._Data_Sfarsit != value))
				{
					this.OnData_SfarsitChanging(value);
					this.SendPropertyChanging();
					this._Data_Sfarsit = value;
					this.SendPropertyChanged("Data_Sfarsit");
					this.OnData_SfarsitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Expozitie_Expozitii_Opere_De_Arta", Storage="_Expozitii_Opere_De_Artas", ThisKey="ID_Expozitie", OtherKey="ID_Expozitie")]
		public EntitySet<Expozitii_Opere_De_Arta> Expozitii_Opere_De_Artas
		{
			get
			{
				return this._Expozitii_Opere_De_Artas;
			}
			set
			{
				this._Expozitii_Opere_De_Artas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Galerii_Expozitie", Storage="_Galerii", ThisKey="ID_Galerie", OtherKey="ID_Galerie", IsForeignKey=true)]
		public Galerii Galerii
		{
			get
			{
				return this._Galerii.Entity;
			}
			set
			{
				Galerii previousValue = this._Galerii.Entity;
				if (((previousValue != value) 
							|| (this._Galerii.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Galerii.Entity = null;
						previousValue.Expozities.Remove(this);
					}
					this._Galerii.Entity = value;
					if ((value != null))
					{
						value.Expozities.Add(this);
						this._ID_Galerie = value.ID_Galerie;
					}
					else
					{
						this._ID_Galerie = default(int);
					}
					this.SendPropertyChanged("Galerii");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Expozitii_Opere_De_Artas(Expozitii_Opere_De_Arta entity)
		{
			this.SendPropertyChanging();
			entity.Expozitie = this;
		}
		
		private void detach_Expozitii_Opere_De_Artas(Expozitii_Opere_De_Arta entity)
		{
			this.SendPropertyChanging();
			entity.Expozitie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Expozitii_Opere_De_Arta")]
	public partial class Expozitii_Opere_De_Arta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ID_Expozitie;
		
		private int _ID_Opera;
		
		private EntityRef<Expozitie> _Expozitie;
		
		private EntityRef<Opere_De_Arta> _Opere_De_Arta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_ExpozitieChanging(int value);
    partial void OnID_ExpozitieChanged();
    partial void OnID_OperaChanging(int value);
    partial void OnID_OperaChanged();
    #endregion
		
		public Expozitii_Opere_De_Arta()
		{
			this._Expozitie = default(EntityRef<Expozitie>);
			this._Opere_De_Arta = default(EntityRef<Opere_De_Arta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Expozitie", DbType="Int NOT NULL")]
		public int ID_Expozitie
		{
			get
			{
				return this._ID_Expozitie;
			}
			set
			{
				if ((this._ID_Expozitie != value))
				{
					if (this._Expozitie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ExpozitieChanging(value);
					this.SendPropertyChanging();
					this._ID_Expozitie = value;
					this.SendPropertyChanged("ID_Expozitie");
					this.OnID_ExpozitieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Opera", DbType="Int NOT NULL")]
		public int ID_Opera
		{
			get
			{
				return this._ID_Opera;
			}
			set
			{
				if ((this._ID_Opera != value))
				{
					if (this._Opere_De_Arta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_OperaChanging(value);
					this.SendPropertyChanging();
					this._ID_Opera = value;
					this.SendPropertyChanged("ID_Opera");
					this.OnID_OperaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Expozitie_Expozitii_Opere_De_Arta", Storage="_Expozitie", ThisKey="ID_Expozitie", OtherKey="ID_Expozitie", IsForeignKey=true)]
		public Expozitie Expozitie
		{
			get
			{
				return this._Expozitie.Entity;
			}
			set
			{
				Expozitie previousValue = this._Expozitie.Entity;
				if (((previousValue != value) 
							|| (this._Expozitie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Expozitie.Entity = null;
						previousValue.Expozitii_Opere_De_Artas.Remove(this);
					}
					this._Expozitie.Entity = value;
					if ((value != null))
					{
						value.Expozitii_Opere_De_Artas.Add(this);
						this._ID_Expozitie = value.ID_Expozitie;
					}
					else
					{
						this._ID_Expozitie = default(int);
					}
					this.SendPropertyChanged("Expozitie");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Opere_De_Arta_Expozitii_Opere_De_Arta", Storage="_Opere_De_Arta", ThisKey="ID_Opera", OtherKey="ID_Opera", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Opere_De_Arta Opere_De_Arta
		{
			get
			{
				return this._Opere_De_Arta.Entity;
			}
			set
			{
				Opere_De_Arta previousValue = this._Opere_De_Arta.Entity;
				if (((previousValue != value) 
							|| (this._Opere_De_Arta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Opere_De_Arta.Entity = null;
						previousValue.Expozitii_Opere_De_Artas.Remove(this);
					}
					this._Opere_De_Arta.Entity = value;
					if ((value != null))
					{
						value.Expozitii_Opere_De_Artas.Add(this);
						this._ID_Opera = value.ID_Opera;
					}
					else
					{
						this._ID_Opera = default(int);
					}
					this.SendPropertyChanged("Opere_De_Arta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Galerii")]
	public partial class Galerii : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Galerie;
		
		private string _Nume_Galerie;
		
		private string _Adresa;
		
		private string _Localitate;
		
		private int _Cod_Postal;
		
		private string _Image;
		
		private EntitySet<Expozitie> _Expozities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_GalerieChanging(int value);
    partial void OnID_GalerieChanged();
    partial void OnNume_GalerieChanging(string value);
    partial void OnNume_GalerieChanged();
    partial void OnAdresaChanging(string value);
    partial void OnAdresaChanged();
    partial void OnLocalitateChanging(string value);
    partial void OnLocalitateChanged();
    partial void OnCod_PostalChanging(int value);
    partial void OnCod_PostalChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    #endregion
		
		public Galerii()
		{
			this._Expozities = new EntitySet<Expozitie>(new Action<Expozitie>(this.attach_Expozities), new Action<Expozitie>(this.detach_Expozities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Galerie", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Galerie
		{
			get
			{
				return this._ID_Galerie;
			}
			set
			{
				if ((this._ID_Galerie != value))
				{
					this.OnID_GalerieChanging(value);
					this.SendPropertyChanging();
					this._ID_Galerie = value;
					this.SendPropertyChanged("ID_Galerie");
					this.OnID_GalerieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nume_Galerie", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string Nume_Galerie
		{
			get
			{
				return this._Nume_Galerie;
			}
			set
			{
				if ((this._Nume_Galerie != value))
				{
					this.OnNume_GalerieChanging(value);
					this.SendPropertyChanging();
					this._Nume_Galerie = value;
					this.SendPropertyChanged("Nume_Galerie");
					this.OnNume_GalerieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresa", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Adresa
		{
			get
			{
				return this._Adresa;
			}
			set
			{
				if ((this._Adresa != value))
				{
					this.OnAdresaChanging(value);
					this.SendPropertyChanging();
					this._Adresa = value;
					this.SendPropertyChanged("Adresa");
					this.OnAdresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Localitate", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string Localitate
		{
			get
			{
				return this._Localitate;
			}
			set
			{
				if ((this._Localitate != value))
				{
					this.OnLocalitateChanging(value);
					this.SendPropertyChanging();
					this._Localitate = value;
					this.SendPropertyChanged("Localitate");
					this.OnLocalitateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cod_Postal", DbType="Int NOT NULL")]
		public int Cod_Postal
		{
			get
			{
				return this._Cod_Postal;
			}
			set
			{
				if ((this._Cod_Postal != value))
				{
					this.OnCod_PostalChanging(value);
					this.SendPropertyChanging();
					this._Cod_Postal = value;
					this.SendPropertyChanged("Cod_Postal");
					this.OnCod_PostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NChar(70)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Galerii_Expozitie", Storage="_Expozities", ThisKey="ID_Galerie", OtherKey="ID_Galerie")]
		public EntitySet<Expozitie> Expozities
		{
			get
			{
				return this._Expozities;
			}
			set
			{
				this._Expozities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Expozities(Expozitie entity)
		{
			this.SendPropertyChanging();
			entity.Galerii = this;
		}
		
		private void detach_Expozities(Expozitie entity)
		{
			this.SendPropertyChanging();
			entity.Galerii = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Opere_De_Arta")]
	public partial class Opere_De_Arta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Opera;
		
		private int _ID_Autor;
		
		private string _Nume;
		
		private string _An;
		
		private double _Pret_RON_;
		
		private string _Detalii;
		
		private string _ImageURL;
		
		private EntitySet<Comenzi_Opere_De_Arta> _Comenzi_Opere_De_Artas;
		
		private EntitySet<Expozitii_Opere_De_Arta> _Expozitii_Opere_De_Artas;
		
		private EntityRef<Autor> _Autor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_OperaChanging(int value);
    partial void OnID_OperaChanged();
    partial void OnID_AutorChanging(int value);
    partial void OnID_AutorChanged();
    partial void OnNumeChanging(string value);
    partial void OnNumeChanged();
    partial void OnAnChanging(string value);
    partial void OnAnChanged();
    partial void OnPret_RON_Changing(double value);
    partial void OnPret_RON_Changed();
    partial void OnDetaliiChanging(string value);
    partial void OnDetaliiChanged();
    partial void OnImageURLChanging(string value);
    partial void OnImageURLChanged();
    #endregion
		
		public Opere_De_Arta()
		{
			this._Comenzi_Opere_De_Artas = new EntitySet<Comenzi_Opere_De_Arta>(new Action<Comenzi_Opere_De_Arta>(this.attach_Comenzi_Opere_De_Artas), new Action<Comenzi_Opere_De_Arta>(this.detach_Comenzi_Opere_De_Artas));
			this._Expozitii_Opere_De_Artas = new EntitySet<Expozitii_Opere_De_Arta>(new Action<Expozitii_Opere_De_Arta>(this.attach_Expozitii_Opere_De_Artas), new Action<Expozitii_Opere_De_Arta>(this.detach_Expozitii_Opere_De_Artas));
			this._Autor = default(EntityRef<Autor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Opera", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Opera
		{
			get
			{
				return this._ID_Opera;
			}
			set
			{
				if ((this._ID_Opera != value))
				{
					this.OnID_OperaChanging(value);
					this.SendPropertyChanging();
					this._ID_Opera = value;
					this.SendPropertyChanged("ID_Opera");
					this.OnID_OperaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Autor", DbType="Int NOT NULL")]
		public int ID_Autor
		{
			get
			{
				return this._ID_Autor;
			}
			set
			{
				if ((this._ID_Autor != value))
				{
					if (this._Autor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_AutorChanging(value);
					this.SendPropertyChanging();
					this._ID_Autor = value;
					this.SendPropertyChanged("ID_Autor");
					this.OnID_AutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nume", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Nume
		{
			get
			{
				return this._Nume;
			}
			set
			{
				if ((this._Nume != value))
				{
					this.OnNumeChanging(value);
					this.SendPropertyChanging();
					this._Nume = value;
					this.SendPropertyChanged("Nume");
					this.OnNumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_An", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string An
		{
			get
			{
				return this._An;
			}
			set
			{
				if ((this._An != value))
				{
					this.OnAnChanging(value);
					this.SendPropertyChanging();
					this._An = value;
					this.SendPropertyChanged("An");
					this.OnAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Pret(RON)]", Storage="_Pret_RON_", DbType="Float NOT NULL")]
		public double Pret_RON_
		{
			get
			{
				return this._Pret_RON_;
			}
			set
			{
				if ((this._Pret_RON_ != value))
				{
					this.OnPret_RON_Changing(value);
					this.SendPropertyChanging();
					this._Pret_RON_ = value;
					this.SendPropertyChanged("Pret_RON_");
					this.OnPret_RON_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detalii", DbType="NChar(500) NOT NULL", CanBeNull=false)]
		public string Detalii
		{
			get
			{
				return this._Detalii;
			}
			set
			{
				if ((this._Detalii != value))
				{
					this.OnDetaliiChanging(value);
					this.SendPropertyChanging();
					this._Detalii = value;
					this.SendPropertyChanged("Detalii");
					this.OnDetaliiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageURL", DbType="NChar(150)")]
		public string ImageURL
		{
			get
			{
				return this._ImageURL;
			}
			set
			{
				if ((this._ImageURL != value))
				{
					this.OnImageURLChanging(value);
					this.SendPropertyChanging();
					this._ImageURL = value;
					this.SendPropertyChanged("ImageURL");
					this.OnImageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Opere_De_Arta_Comenzi_Opere_De_Arta", Storage="_Comenzi_Opere_De_Artas", ThisKey="ID_Opera", OtherKey="ID_Opera")]
		public EntitySet<Comenzi_Opere_De_Arta> Comenzi_Opere_De_Artas
		{
			get
			{
				return this._Comenzi_Opere_De_Artas;
			}
			set
			{
				this._Comenzi_Opere_De_Artas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Opere_De_Arta_Expozitii_Opere_De_Arta", Storage="_Expozitii_Opere_De_Artas", ThisKey="ID_Opera", OtherKey="ID_Opera")]
		public EntitySet<Expozitii_Opere_De_Arta> Expozitii_Opere_De_Artas
		{
			get
			{
				return this._Expozitii_Opere_De_Artas;
			}
			set
			{
				this._Expozitii_Opere_De_Artas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Autor_Opere_De_Arta", Storage="_Autor", ThisKey="ID_Autor", OtherKey="ID_Autor", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Autor Autor
		{
			get
			{
				return this._Autor.Entity;
			}
			set
			{
				Autor previousValue = this._Autor.Entity;
				if (((previousValue != value) 
							|| (this._Autor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Autor.Entity = null;
						previousValue.Opere_De_Artas.Remove(this);
					}
					this._Autor.Entity = value;
					if ((value != null))
					{
						value.Opere_De_Artas.Add(this);
						this._ID_Autor = value.ID_Autor;
					}
					else
					{
						this._ID_Autor = default(int);
					}
					this.SendPropertyChanged("Autor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comenzi_Opere_De_Artas(Comenzi_Opere_De_Arta entity)
		{
			this.SendPropertyChanging();
			entity.Opere_De_Arta = this;
		}
		
		private void detach_Comenzi_Opere_De_Artas(Comenzi_Opere_De_Arta entity)
		{
			this.SendPropertyChanging();
			entity.Opere_De_Arta = null;
		}
		
		private void attach_Expozitii_Opere_De_Artas(Expozitii_Opere_De_Arta entity)
		{
			this.SendPropertyChanging();
			entity.Opere_De_Arta = this;
		}
		
		private void detach_Expozitii_Opere_De_Artas(Expozitii_Opere_De_Arta entity)
		{
			this.SendPropertyChanging();
			entity.Opere_De_Arta = null;
		}
	}
}
#pragma warning restore 1591
